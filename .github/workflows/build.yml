name: Build Django-RQL library

on:
  push:
    branches: '*'
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build and test ${{ matrix.python-version }} - ${{ matrix.django-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        django-version: ['3.2', '4.1', '4.2']
        exclude:
          - python-version: '3.7'
            django-version: '4.1'
          - python-version: '3.7'
            django-version: '4.2'
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Replace python version
        if: ${{ matrix.python-version != '3.7' }}
        run: sed -i "s/python = \">=3.7,<4\"/python = \">=3.8,<4\"/" ./pyproject.toml
      - name: Install dependencies
        run: |
          poetry install
      - name: Force django version ${{ matrix.django-version }} 
        run: |
          poetry add django==${{ matrix.django-version }}.*
      - name: Linting
        run: |
          poetry run flake8
      - name: Testing
        run: |
          poetry run pytest
  sonar:
    name: Quality Analysis by sonar
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Testing
      run: |
        poetry run pytest
    - name: Fix coverage report for Sonar
      run: |
        sed -i 's/\/home\/runner\/work\/django-rql\/django-rql\//\/github\/workspace\//g' ./tests/reports/coverage.xml
    - name: SonarCloud
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Wait sonar to process report
      uses: jakejarvis/wait-action@master
      with:
        time: '15s'
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}